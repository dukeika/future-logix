service: futurelogix-backend

#frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs20.x
  stage: dev
  region: eu-west-2
  vpc:
    securityGroupIds:
      - sg-0e8dfc01a7a63952f # rds-lambda-1
      - sg-092b57e643c8aea7f # futurelogix-sg
      - sg-0f688fba8f11ddc61 # lambda-rds-1
    subnetIds:
      - subnet-0e49ffbd10a18b237
      - subnet-0ae08e9da3278f59c
      - subnet-00463b83c6c02b2a3
  environment:
    DB_HOST: ${env:DB_HOST}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_DATABASE: ${env:DB_DATABASE}
    DB_PORT: ${env:DB_PORT}
    REGION: ${self:provider.region}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "lambda:InvokeFunction"
            - "lambda:InvokeAsync"
          Resource: "*"

functions:
  createBlogPost:
    handler: handler.createBlogPost
    events:
      - http:
          path: blog
          method: post
          cors: true

  getBlogPosts:
    handler: handler.getBlogPosts
    events:
      - http:
          path: blog
          method: get
          cors: true

  getBlogPost:
    handler: handler.getBlogPost
    events:
      - http:
          path: blog/{slug}
          method: get
          cors: true

  updateBlogPost:
    handler: handler.updateBlogPost
    events:
      - http:
          path: blog/id/{id}
          method: put
          cors: true

  deleteBlogPost:
    handler: handler.deleteBlogPost
    events:
      - http:
          path: blog/id/{id}
          method: delete
          cors: true
