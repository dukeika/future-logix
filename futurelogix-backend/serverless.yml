# futurelogix-backend/serverless.yml

service: futurelogix-backend

provider:
  name: aws
  runtime: nodejs20.x
  stage: dev
  region: eu-west-2
  vpc:
    provider:
      securityGroupIds:
        - sg-0c6e1b7f3efcc31e3
        - sg-0bb17b13c11359fe6
        - sg-0f688fba8f11ddc61
        - sg-096f5be10f343c7ac
        - sg-033a6ff5b3b53c1dc
        - sg-0df3e50722c22f10a
        - sg-056255b5b10f4ad9d
      subnetIds:
        - subnet-0e49ffbd10a18b237
        - subnet-0ae08e9da3278f59c
        - subnet-00463b83c6c02b2a3
  environment:
    DB_HOST: ${env:DB_HOST}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_DATABASE: ${env:DB_DATABASE}
    DB_PORT: ${env:DB_PORT}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "ses:SendEmail" # If you want to send emails (e.g., for contact form)
          Resource: "*"
        # Add permissions for RDS Data API if you use it, or ensure Lambda's VPC allows connections to RDS
        # For simplicity, we assume direct PG connection is allowed through VPC

functions:
  # Existing functions (if any)

  # Blog Functions
  createBlogPost:
    handler: handler.createBlogPost
    events:
      - http:
          path: blog
          method: post
          cors: true
          private: false # Set to true for authenticated access
  getBlogPosts:
    handler: handler.getBlogPosts
    events:
      - http:
          path: blog
          method: get
          cors: true
          private: false
  getBlogPostBySlug:
    handler: handler.getBlogPostBySlug
    events:
      - http:
          path: blog/{slug}
          method: get
          cors: true
          private: false
  updateBlogPost:
    handler: handler.updateBlogPost
    events:
      - http:
          path: blog/id/{id} # CHANGED: Added '/id'
          method: put
          cors: true
          private: false # Set to true for authenticated access
  deleteBlogPost:
    handler: handler.deleteBlogPost
    events:
      - http:
          path: blog/id/{id} # CHANGED: Added '/id'
          method: delete
          cors: true
          private: false # Set to true for authenticated access

  # Consultation Form Function
  submitConsultation:
    handler: handler.submitConsultation
    events:
      - http:
          path: consultation
          method: post
          cors: true
          private: false

  # Feedback Form Function
  submitFeedback:
    handler: handler.submitFeedback
    events:
      - http:
          path: feedback
          method: post
          cors: true
          private: false
# Future: Add functions for your store (e.g., createProduct, getProducts, etc.)
