{
  "service": {
    "service": "futurelogix-backend",
    "serviceObject": {
      "name": "futurelogix-backend"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "stage": "dev",
      "region": "eu-west-2",
      "vpc": {
        "provider": {
          "securityGroupIds": [
            "sg-0c6e1b7f3efcc31e3",
            "sg-0bb17b13c11359fe6",
            "sg-0f688fba8f11ddc61",
            "sg-096f5be10f343c7ac",
            "sg-033a6ff5b3b53c1dc",
            "sg-0df3e50722c22f10a",
            "sg-056255b5b10f4ad9d"
          ],
          "subnetIds": [
            "subnet-0e49ffbd10a18b237",
            "subnet-0ae08e9da3278f59c",
            "subnet-00463b83c6c02b2a3"
          ]
        }
      },
      "environment": {
        "DB_HOST": "futurelogix-db.cnqa06cko6qz.eu-west-2.rds.amazonaws.com",
        "DB_USER": "akabom",
        "DB_PASSWORD": "lbifdfdfdX3",
        "DB_DATABASE": "futurelogix-db",
        "DB_PORT": "5432"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "ses:SendEmail"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "CreateBlogPostLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/futurelogix-backend-dev-createBlogPost"
            }
          },
          "GetBlogPostsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/futurelogix-backend-dev-getBlogPosts"
            }
          },
          "GetBlogPostBySlugLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/futurelogix-backend-dev-getBlogPostBySlug"
            }
          },
          "UpdateBlogPostLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/futurelogix-backend-dev-updateBlogPost"
            }
          },
          "DeleteBlogPostLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/futurelogix-backend-dev-deleteBlogPost"
            }
          },
          "SubmitConsultationLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/futurelogix-backend-dev-submitConsultation"
            }
          },
          "SubmitFeedbackLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/futurelogix-backend-dev-submitFeedback"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "futurelogix-backend",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/futurelogix-backend-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/futurelogix-backend-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "futurelogix-backend",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                    ]
                  ]
                }
              ]
            }
          },
          "CreateBlogPostLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-2-49a49cd9-22d1",
                "S3Key": "serverless/futurelogix-backend/dev/1750220523716-2025-06-18T04:22:03.716Z/futurelogix-backend.zip"
              },
              "Handler": "handler.createBlogPost",
              "Runtime": "nodejs20.x",
              "FunctionName": "futurelogix-backend-dev-createBlogPost",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DB_HOST": "futurelogix-db.cnqa06cko6qz.eu-west-2.rds.amazonaws.com",
                  "DB_USER": "akabom",
                  "DB_PASSWORD": "lbifdfdfdX3",
                  "DB_DATABASE": "futurelogix-db",
                  "DB_PORT": "5432"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateBlogPostLogGroup"
            ]
          },
          "GetBlogPostsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-2-49a49cd9-22d1",
                "S3Key": "serverless/futurelogix-backend/dev/1750220523716-2025-06-18T04:22:03.716Z/futurelogix-backend.zip"
              },
              "Handler": "handler.getBlogPosts",
              "Runtime": "nodejs20.x",
              "FunctionName": "futurelogix-backend-dev-getBlogPosts",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DB_HOST": "futurelogix-db.cnqa06cko6qz.eu-west-2.rds.amazonaws.com",
                  "DB_USER": "akabom",
                  "DB_PASSWORD": "lbifdfdfdX3",
                  "DB_DATABASE": "futurelogix-db",
                  "DB_PORT": "5432"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetBlogPostsLogGroup"
            ]
          },
          "GetBlogPostBySlugLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-2-49a49cd9-22d1",
                "S3Key": "serverless/futurelogix-backend/dev/1750220523716-2025-06-18T04:22:03.716Z/futurelogix-backend.zip"
              },
              "Handler": "handler.getBlogPostBySlug",
              "Runtime": "nodejs20.x",
              "FunctionName": "futurelogix-backend-dev-getBlogPostBySlug",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DB_HOST": "futurelogix-db.cnqa06cko6qz.eu-west-2.rds.amazonaws.com",
                  "DB_USER": "akabom",
                  "DB_PASSWORD": "lbifdfdfdX3",
                  "DB_DATABASE": "futurelogix-db",
                  "DB_PORT": "5432"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetBlogPostBySlugLogGroup"
            ]
          },
          "UpdateBlogPostLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-2-49a49cd9-22d1",
                "S3Key": "serverless/futurelogix-backend/dev/1750220523716-2025-06-18T04:22:03.716Z/futurelogix-backend.zip"
              },
              "Handler": "handler.updateBlogPost",
              "Runtime": "nodejs20.x",
              "FunctionName": "futurelogix-backend-dev-updateBlogPost",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DB_HOST": "futurelogix-db.cnqa06cko6qz.eu-west-2.rds.amazonaws.com",
                  "DB_USER": "akabom",
                  "DB_PASSWORD": "lbifdfdfdX3",
                  "DB_DATABASE": "futurelogix-db",
                  "DB_PORT": "5432"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateBlogPostLogGroup"
            ]
          },
          "DeleteBlogPostLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-2-49a49cd9-22d1",
                "S3Key": "serverless/futurelogix-backend/dev/1750220523716-2025-06-18T04:22:03.716Z/futurelogix-backend.zip"
              },
              "Handler": "handler.deleteBlogPost",
              "Runtime": "nodejs20.x",
              "FunctionName": "futurelogix-backend-dev-deleteBlogPost",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DB_HOST": "futurelogix-db.cnqa06cko6qz.eu-west-2.rds.amazonaws.com",
                  "DB_USER": "akabom",
                  "DB_PASSWORD": "lbifdfdfdX3",
                  "DB_DATABASE": "futurelogix-db",
                  "DB_PORT": "5432"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteBlogPostLogGroup"
            ]
          },
          "SubmitConsultationLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-2-49a49cd9-22d1",
                "S3Key": "serverless/futurelogix-backend/dev/1750220523716-2025-06-18T04:22:03.716Z/futurelogix-backend.zip"
              },
              "Handler": "handler.submitConsultation",
              "Runtime": "nodejs20.x",
              "FunctionName": "futurelogix-backend-dev-submitConsultation",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DB_HOST": "futurelogix-db.cnqa06cko6qz.eu-west-2.rds.amazonaws.com",
                  "DB_USER": "akabom",
                  "DB_PASSWORD": "lbifdfdfdX3",
                  "DB_DATABASE": "futurelogix-db",
                  "DB_PORT": "5432"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SubmitConsultationLogGroup"
            ]
          },
          "SubmitFeedbackLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-2-49a49cd9-22d1",
                "S3Key": "serverless/futurelogix-backend/dev/1750220523716-2025-06-18T04:22:03.716Z/futurelogix-backend.zip"
              },
              "Handler": "handler.submitFeedback",
              "Runtime": "nodejs20.x",
              "FunctionName": "futurelogix-backend-dev-submitFeedback",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DB_HOST": "futurelogix-db.cnqa06cko6qz.eu-west-2.rds.amazonaws.com",
                  "DB_USER": "akabom",
                  "DB_PASSWORD": "lbifdfdfdX3",
                  "DB_DATABASE": "futurelogix-db",
                  "DB_PORT": "5432"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SubmitFeedbackLogGroup"
            ]
          },
          "CreateBlogPostLambdaVersionKNeTUBSdH4094WL2X0KyfCTjM5yptihk6SzbvLssTdQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateBlogPostLambdaFunction"
              },
              "CodeSha256": "LgMC6xzbh9eJpIUVWVeeiEmUd5y2hDIgVjYn/8Be+hI="
            }
          },
          "GetBlogPostsLambdaVersionWauAKLNfZ1p3uFZeviikflgiHkgaXjW2r6PEb7Ci3Y": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetBlogPostsLambdaFunction"
              },
              "CodeSha256": "LgMC6xzbh9eJpIUVWVeeiEmUd5y2hDIgVjYn/8Be+hI="
            }
          },
          "GetBlogPostBySlugLambdaVersionWIoiOvRbax4ncyEPVI73isvtrRygRx5syf0SGwmQs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetBlogPostBySlugLambdaFunction"
              },
              "CodeSha256": "LgMC6xzbh9eJpIUVWVeeiEmUd5y2hDIgVjYn/8Be+hI="
            }
          },
          "UpdateBlogPostLambdaVersion6lDXcL2DZEXaNi2b4js17cGyb5DGcDcGW4XhZ1Dgw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateBlogPostLambdaFunction"
              },
              "CodeSha256": "LgMC6xzbh9eJpIUVWVeeiEmUd5y2hDIgVjYn/8Be+hI="
            }
          },
          "DeleteBlogPostLambdaVersion777aaricy9ElRFiKrl22cPk6Z8miirxAbJzCTg9Qk88": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteBlogPostLambdaFunction"
              },
              "CodeSha256": "LgMC6xzbh9eJpIUVWVeeiEmUd5y2hDIgVjYn/8Be+hI="
            }
          },
          "SubmitConsultationLambdaVersionwrnQH743xowP8Mmoym3jbrmTt8PyFSuZqeaYZAyY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SubmitConsultationLambdaFunction"
              },
              "CodeSha256": "LgMC6xzbh9eJpIUVWVeeiEmUd5y2hDIgVjYn/8Be+hI="
            }
          },
          "SubmitFeedbackLambdaVersionHJi0jsAjID65ekryaZ0LONMASFNLJuiijvgPKeoWc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SubmitFeedbackLambdaFunction"
              },
              "CodeSha256": "LgMC6xzbh9eJpIUVWVeeiEmUd5y2hDIgVjYn/8Be+hI="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-futurelogix-backend",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceBlog": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "blog",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceBlogSlugVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceBlog"
              },
              "PathPart": "{slug}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceBlogId": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceBlog"
              },
              "PathPart": "id",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceBlogIdIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceBlogId"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceConsultation": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "consultation",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFeedback": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "feedback",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodBlogOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceBlog"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodBlogSlugVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceBlogSlugVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodBlogIdIdVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PUT'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceBlogIdIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodConsultationOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceConsultation"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFeedbackOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceFeedback"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodBlogPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceBlog"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateBlogPostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateBlogPostLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodBlogGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceBlog"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetBlogPostsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetBlogPostsLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodBlogSlugVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceBlogSlugVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetBlogPostBySlugLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetBlogPostBySlugLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodBlogIdIdVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceBlogIdIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateBlogPostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UpdateBlogPostLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodBlogIdIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceBlogIdIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteBlogPostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteBlogPostLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodConsultationPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceConsultation"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SubmitConsultationLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SubmitConsultationLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFeedbackPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFeedback"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SubmitFeedbackLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SubmitFeedbackLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1750220469969": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodBlogOptions",
              "ApiGatewayMethodBlogSlugVarOptions",
              "ApiGatewayMethodBlogIdIdVarOptions",
              "ApiGatewayMethodConsultationOptions",
              "ApiGatewayMethodFeedbackOptions",
              "ApiGatewayMethodBlogPost",
              "ApiGatewayMethodBlogGet",
              "ApiGatewayMethodBlogSlugVarGet",
              "ApiGatewayMethodBlogIdIdVarPut",
              "ApiGatewayMethodBlogIdIdVarDelete",
              "ApiGatewayMethodConsultationPost",
              "ApiGatewayMethodFeedbackPost"
            ]
          },
          "CreateBlogPostLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateBlogPostLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetBlogPostsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetBlogPostsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetBlogPostBySlugLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetBlogPostBySlugLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateBlogPostLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateBlogPostLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteBlogPostLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteBlogPostLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SubmitConsultationLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SubmitConsultationLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SubmitFeedbackLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SubmitFeedbackLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-eu-west-2-49a49cd9-22d1",
            "Export": {
              "Name": "sls-futurelogix-backend-dev-ServerlessDeploymentBucketName"
            }
          },
          "CreateBlogPostLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateBlogPostLambdaVersionKNeTUBSdH4094WL2X0KyfCTjM5yptihk6SzbvLssTdQ"
            },
            "Export": {
              "Name": "sls-futurelogix-backend-dev-CreateBlogPostLambdaFunctionQualifiedArn"
            }
          },
          "GetBlogPostsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetBlogPostsLambdaVersionWauAKLNfZ1p3uFZeviikflgiHkgaXjW2r6PEb7Ci3Y"
            },
            "Export": {
              "Name": "sls-futurelogix-backend-dev-GetBlogPostsLambdaFunctionQualifiedArn"
            }
          },
          "GetBlogPostBySlugLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetBlogPostBySlugLambdaVersionWIoiOvRbax4ncyEPVI73isvtrRygRx5syf0SGwmQs"
            },
            "Export": {
              "Name": "sls-futurelogix-backend-dev-GetBlogPostBySlugLambdaFunctionQualifiedArn"
            }
          },
          "UpdateBlogPostLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateBlogPostLambdaVersion6lDXcL2DZEXaNi2b4js17cGyb5DGcDcGW4XhZ1Dgw"
            },
            "Export": {
              "Name": "sls-futurelogix-backend-dev-UpdateBlogPostLambdaFunctionQualifiedArn"
            }
          },
          "DeleteBlogPostLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteBlogPostLambdaVersion777aaricy9ElRFiKrl22cPk6Z8miirxAbJzCTg9Qk88"
            },
            "Export": {
              "Name": "sls-futurelogix-backend-dev-DeleteBlogPostLambdaFunctionQualifiedArn"
            }
          },
          "SubmitConsultationLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SubmitConsultationLambdaVersionwrnQH743xowP8Mmoym3jbrmTt8PyFSuZqeaYZAyY"
            },
            "Export": {
              "Name": "sls-futurelogix-backend-dev-SubmitConsultationLambdaFunctionQualifiedArn"
            }
          },
          "SubmitFeedbackLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SubmitFeedbackLambdaVersionHJi0jsAjID65ekryaZ0LONMASFNLJuiijvgPKeoWc"
            },
            "Export": {
              "Name": "sls-futurelogix-backend-dev-SubmitFeedbackLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-futurelogix-backend-dev-ServiceEndpoint"
            }
          }
        }
      }
    },
    "pluginsData": {},
    "functions": {
      "createBlogPost": {
        "handler": "handler.createBlogPost",
        "events": [
          {
            "http": {
              "path": "blog",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "private": false,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "futurelogix-backend-dev-createBlogPost",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "CreateBlogPostLambdaVersionKNeTUBSdH4094WL2X0KyfCTjM5yptihk6SzbvLssTdQ"
      },
      "getBlogPosts": {
        "handler": "handler.getBlogPosts",
        "events": [
          {
            "http": {
              "path": "blog",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "private": false,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "futurelogix-backend-dev-getBlogPosts",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "GetBlogPostsLambdaVersionWauAKLNfZ1p3uFZeviikflgiHkgaXjW2r6PEb7Ci3Y"
      },
      "getBlogPostBySlug": {
        "handler": "handler.getBlogPostBySlug",
        "events": [
          {
            "http": {
              "path": "blog/{slug}",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "private": false,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "futurelogix-backend-dev-getBlogPostBySlug",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "GetBlogPostBySlugLambdaVersionWIoiOvRbax4ncyEPVI73isvtrRygRx5syf0SGwmQs"
      },
      "updateBlogPost": {
        "handler": "handler.updateBlogPost",
        "events": [
          {
            "http": {
              "path": "blog/id/{id}",
              "method": "put",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PUT"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "private": false,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "futurelogix-backend-dev-updateBlogPost",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "UpdateBlogPostLambdaVersion6lDXcL2DZEXaNi2b4js17cGyb5DGcDcGW4XhZ1Dgw"
      },
      "deleteBlogPost": {
        "handler": "handler.deleteBlogPost",
        "events": [
          {
            "http": {
              "path": "blog/id/{id}",
              "method": "delete",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "private": false,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "futurelogix-backend-dev-deleteBlogPost",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "DeleteBlogPostLambdaVersion777aaricy9ElRFiKrl22cPk6Z8miirxAbJzCTg9Qk88"
      },
      "submitConsultation": {
        "handler": "handler.submitConsultation",
        "events": [
          {
            "http": {
              "path": "consultation",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "private": false,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "futurelogix-backend-dev-submitConsultation",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "SubmitConsultationLambdaVersionwrnQH743xowP8Mmoym3jbrmTt8PyFSuZqeaYZAyY"
      },
      "submitFeedback": {
        "handler": "handler.submitFeedback",
        "events": [
          {
            "http": {
              "path": "feedback",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "private": false,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "futurelogix-backend-dev-submitFeedback",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "SubmitFeedbackLambdaVersionHJi0jsAjID65ekryaZ0LONMASFNLJuiijvgPKeoWc"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "service": "futurelogix-backend",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "appId": null,
    "orgId": null,
    "layers": {},
    "artifact": "C:\\Users\\akabo\\OneDrive\\Documents\\futurelogix-1\\future-logix\\futurelogix-backend\\.serverless\\futurelogix-backend.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/futurelogix-backend/dev/1750220523716-2025-06-18T04:22:03.716Z",
    "artifact": "futurelogix-backend.zip"
  }
}